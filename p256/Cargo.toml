# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies
#
# If you believe there's an error in this file please file an
# issue against the rust-lang/cargo repository. If you're
# editing this file be aware that the upstream Cargo.toml
# will likely look very different (and much more reasonable)

[package]
edition = "2018"
name = "p256"
version = "0.5.2"
authors = ["RustCrypto Developers"]
description = "Pure Rust implementation of the NIST P-256 (a.k.a. secp256r1, prime256v1)\nelliptic curve with support for ECDH, ECDSA signing/verification, and general\npurpose curve arithmetic\n"
documentation = "https://docs.rs/elliptic-curve"
readme = "README.md"
keywords = ["crypto", "ecc", "nist", "prime256v1", "secp256r1"]
categories = ["cryptography", "no-std"]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/RustCrypto/elliptic-curves/tree/master/p256"
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
[dependencies.ecdsa-core]
path = "../ecdsa"
version = "0.8"
optional = true
default-features = false
package = "ecdsa"

[dependencies.elliptic-curve]
path = "../elliptic-curve"
version = "0.6"
default-features = false

[dependencies.sha2]
path = "../sha2"
version = "0.9"
optional = true
default-features = false

[dev-dependencies.ecdsa-core]
version = "0.8"
features = ["dev"]
default-features = false
package = "ecdsa"

[dev-dependencies.hex]
version = "0.4"

[dev-dependencies.hex-literal]
version = "0.3"

[dev-dependencies.proptest]
version = "0.10"

[dev-dependencies.rand_core]
version = "0.5"
features = ["getrandom"]

[features]
arithmetic = ["elliptic-curve/arithmetic"]
default = ["arithmetic"] # "std"
digest = ["elliptic-curve/digest", "ecdsa-core/digest"]
ecdh = ["elliptic-curve/ecdh", "zeroize"]
ecdsa = ["arithmetic", "ecdsa-core/sign", "ecdsa-core/verify", "sha256", "zeroize"]
oid = ["elliptic-curve/oid"]
sha256 = ["digest", "ecdsa-core/hazmat", "sha2"]
std = ["elliptic-curve/std"]
test-vectors = []
zeroize = ["elliptic-curve/zeroize"]
